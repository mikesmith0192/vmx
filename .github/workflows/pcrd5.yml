name: Windows - CRD Sessions via Depot Token

on:
  # This section configures the manual trigger to ask for auth codes.
  workflow_dispatch:
    inputs:
      auth_code_1:
        description: 'CRD Auth Code for Runner 1'
        required: true
        type: string
      auth_code_2:
        description: 'CRD Auth Code for Runner 2'
        required: true
        type: string
      auth_code_3:
        description: 'CRD Auth Code for Runner 3'
        required: true
        type: string
      auth_code_4:
        description: 'CRD Auth Code for Runner 4'
        required: true
        type: string
      auth_code_5:
        description: 'CRD Auth Code for Runner 5'
        required: true
        type: string

jobs:
  build:
    # The job name is dynamic and includes the runner ID from the matrix.
    name: Runner ${{ matrix.runner_id }}
    
    # This correctly requests a Depot runner.
    runs-on: depot-windows-2022
    timeout-minutes: 360

    # NOTE: The 'permissions' block for OIDC has been removed. It is not needed for this method.

    strategy:
      fail-fast: false
      matrix:
        runner_id: [1, 2, 3, 4, 5]
        include:
          - runner_id: 1
            auth_code: ${{ github.event.inputs.auth_code_1 }}
          - runner_id: 2
            auth_code: ${{ github.event.inputs.auth_code_2 }}
          - runner_id: 3
            auth_code: ${{ github.event.inputs.auth_code_3 }}
          - runner_id: 4
            auth_code: ${{ github.event.inputs.auth_code_4 }}
          - runner_id: 5
            auth_code: ${{ github.event.inputs.auth_code_5 }}

    steps:
      # This step now uses your new DEPOT_TOKEN secret to authenticate.
      # The 'project' key has been removed.
      - name: Setup Depot
        uses: depot/setup-action@v1
        with:
          depot-token: ${{ secrets.DEPOT_TOKEN }}

      - name: Download & Install Chrome Remote Desktop
        run: |
          Invoke-WebRequest -Uri "https://dl.google.com/edgedl/chrome-remote-desktop/chromeremotedesktophost.msi" -OutFile "chromeremotedesktophost.msi"
          Start-Process msiexec.exe -Wait -ArgumentList '/i chromeremotedesktophost.msi /quiet'
          
      - name: Start Chrome Remote Desktop Host
        run: |
          & "${env:ProgramFiles(x86)}\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe" --code="${{ matrix.auth_code }}" --redirect-url="https://remotedesktop.google.com/_/oauthredirect" --name="$env:COMPUTERNAME-${{ matrix.runner_id }}" --pin=112233
          
      - name: Keep Runner Alive for 6 Hours
        shell: pwsh
        run: |
          Write-Host "Runner is now active. Keeping alive for 6 hours."
          Start-Sleep -Seconds 21600
          Write-Host "6-hour session has completed."
